# This template contains steps to build, package and sign the solution.

parameters:
  platform: 'x64'
  config: 'Debug'
  onebranchArtifactPrefix: 'drop_build_official_main_build_project'

jobs:
- job: build_${{ parameters.platform }}_${{ parameters.config }}
  displayName: ${{ parameters.platform }}_${{ parameters.config }}
  variables:
    platconfig: ${{ parameters.platform }}_${{ parameters.config }}
  pool:
    vmImage: windows-2022
  steps:
  - checkout: self
    submodules: recursive

  - task: DownloadPipelineArtifact@2
    inputs:
      source: specific
      project: $(resources.pipeline.onebranch.projectID)
      pipeline: $(resources.pipeline.onebranch.pipelineID)
      preferTriggeringPipeline: true
      runVersion: specific
      runId: $(resources.pipeline.onebranch.runID)
      artifact: ${{ parameters.onebranchArtifactPrefix }}_$(platconfig)
      path: $(Build.ArtifactStagingDirectory)/bin/$(platconfig)

  - task: PowerShell@2
    displayName: Prepare Machine
    inputs:
      filePath: tools/prepare-machine.ps1
      arguments: -ForBuild -Verbose

  # Use the latest NuGet version so we can reference local NuGet packages.
  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet 6.4.0'
    inputs:
      versionSpec: 6.4.0

  # Attempt to work around unreliable NuGet restore by refreshing the credential provider.
  - task: NuGetAuthenticate@1
    inputs:
      forceReinstallCredentialProvider: true

  - task: NuGetCommand@2
    displayName: Nuget Restore
    env:
      NUGET_RESTORE_MSBUILD_ARGS: /p:IsAdmin=true /p:Platform=${{ parameters.platform }} /p:Configuration=${{ parameters.config }}
    inputs:
      restoreSolution: xdp.sln
      feedsToUse: config
      nugetConfigPath: ./src/nuget.config

  - task: PowerShell@2
    displayName: Prepare for compiling eBPF programs
    inputs:
      targetType: inline
      script: tools/prepare-machine.ps1 -ForEbpfBuild -Verbose

  - task: VSBuild@1
    displayName: Build Solution
    inputs:
      solution: xdp.sln
      platform: ${{ parameters.platform }}
      configuration: ${{ parameters.config }}
      msbuildArgs: -m /p:SignMode=TestSign /p:IsAdmin=true
      msBuildArchitecture: x64

  - task: CopyFiles@2
    displayName: Filter Artifacts
    inputs:
      sourceFolder: artifacts/bin/$(platconfig)/test
      contents: '**/!(*.ilk|*.exp|*.lastcodeanalysissucceeded|*.tlog|*.lastbuildstate)'
      targetFolder: $(Build.ArtifactStagingDirectory)/bin/$(platconfig)/test

  - task: PublishBuildArtifacts@1
    displayName: Upload Artifacts
    inputs:
      artifactName: bin_$(platconfig)
      pathToPublish: $(Build.ArtifactStagingDirectory)/bin/$(platconfig)
      parallel: true

  - task: PublishSymbols@2
    inputs:
        sourceFolder: $(Build.ArtifactStagingDirectory)/bin/$(platconfig)/test
        searchPattern: '**/*.pdb'
        symbolServerType: teamServices
        indexSources: false
